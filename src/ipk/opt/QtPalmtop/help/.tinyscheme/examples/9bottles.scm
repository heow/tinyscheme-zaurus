
;;; Warning, do NOT edit this file with the
;;; standard Zaurus text editor!  Please
;;; use your favorite text editor such as
;;; vi, MinIDE, uemacs, opie-textedit, etc.

;; World renound beer drinking song, using
;; the (sleep x) function.  (sleep x) is
;; also good for delaying the display for
;; TinyScheme scripts.

; load TinyScheme extension for (usleep)
(load-extension "tsx")
(define (sleep n)
    (usleep (* n 1000000)))

;; closure example, keeps its own state
;; and can be passed to functions
(define (make-counter n)
    (let ((count (+ 1 n))) ; dec first
      (lambda ()
        (set! count (- count 1))
        count)))

;; display a count and noun in a way that
;; makes sense.  "1 cat" vs "2 cats".
(define (display-human-count noun count)
  (display count)(display " ")
  (display noun)
  (if (not (= count 1))
    (display "s")))

;; main loop
(define (bottles-of-beer counter)
  (define bottle-count (counter)) ; decrements
  (display-human-count "bottle" bottle-count)
  (display " of beer on the wall,\n    ")
  (display-human-count "bottle" bottle-count)
  (display " of beer.\n    Take one down, pass it around...\n")
  (sleep 1)
  (if (> bottle-count 1)
    (bottles-of-beer counter)
    (display "\nSorry, no more beer!  :-(\n")))

;; script starts here
(display "Cue the music please...\n\n")
(bottles-of-beer (make-counter 9))
(sleep 4) ; hold display for 4 seconds
